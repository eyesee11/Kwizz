spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/quiz_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:eyeseemysql11}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.sql.init.mode=never

# =============================================================================
# SECURITY & JWT CONFIGURATION
# =============================================================================
app.jwt.secret=my-super-secret-jwt-key-for-quiz-platform-2024-secure-key-very-long-and-secure-key-for-production-use-with-256-bits-minimum
app.jwt.ttlSeconds=86400
app.jwt.refreshTtlSeconds=604800

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
server.servlet.session.timeout=30m
spring.web.resources.add-mappings=false
server.port=8083

# =============================================================================
# AI SERVICE CONFIGURATION (GEMINI)
# =============================================================================
gemini.api.key=AIzaSyBO4wKZ_bpgEn4d8GyGhWeMDISwmHE1E40
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
logging.level.com.example.quiz=INFO
logging.level.org.springframework.security=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
cors.allowed.origins=http://localhost:3000,http://localhost:5173,http://localhost:5174

# =============================================================================
# MICROSERVICES CONFIGURATION
# Using eureka service discovery instead of local implementations
# =============================================================================
microservices.mode=eureka

# Eureka client configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
spring.application.name=quiz-platform
